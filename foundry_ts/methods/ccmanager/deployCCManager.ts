
// generated by foundry_ts/methods/ccmanager/genCode.ts
// Path: foundry_scripts/ccmanager/deployCCManager.s.sol
import { addOperation } from "../../utils/config";
import { ccmanager_deploy_json } from "../../utils/const";
import { set_env_var, foundry_wrapper } from "../../foundry";
import { checkArgs } from "../../helper";
import { setupDeployJson } from "../../utils/setupDeployJson";

// current file name
const method_name = "deployCCManager";

export function deployCCManagerWithArgv(argv: any) {
    const required_flags = ["env", "network", "role", "broadcast"];
    checkArgs(method_name, argv, required_flags);
    deployCCManager(argv.env, argv.network, argv.role, argv.broadcast, argv.simulate);
}

export function deployCCManager(env: string, network: string, role: string, broadcast: boolean, simulate: boolean) {
    setupDeployJson(ccmanager_deploy_json, env, network, role);
    set_env_var(method_name, "env", env);
    set_env_var(method_name, "network", network);
    set_env_var(method_name, "role", role);
    set_env_var(method_name, "broadcast", broadcast.toString());
    foundry_wrapper(method_name, broadcast, simulate);

}

addOperation(method_name, deployCCManagerWithArgv);
