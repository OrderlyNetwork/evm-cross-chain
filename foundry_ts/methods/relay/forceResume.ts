
// generated by foundry_ts/methods/ccmanager/genCode.ts
// Path: foundry_scripts/relay/forceResume.s.sol
import { addArgvType, addOperation } from "../../utils/config";
import { ccmanager_deploy_json } from "../../utils/const";
import { set_env_var, foundry_wrapper } from "../../foundry";
import { checkArgs } from "../../helper";
import { setupDeployJson } from "../../utils/setupDeployJson";

// current file name
const method_name = "forceResume";

addArgvType("string", "path");

export function forceResumeWithArgv(argv: any) {
    const required_flags = ["env", "network", "lzChainId", "path"];
    checkArgs(method_name, argv, required_flags);
    forceResume(argv.env, argv.network, argv.lzChainId, argv.path, argv.broadcast, argv.simulate);
}

export function forceResume(env: string, network: string, lzChainId: number, path: string, broadcast: boolean, simulate: boolean) {
    

    set_env_var(method_name, "env", env);
    set_env_var(method_name, "network", network);
    set_env_var(method_name, "lzChainId", lzChainId.toString());
    set_env_var(method_name, "path", path);
    foundry_wrapper(method_name, broadcast, simulate);

}

addOperation(method_name, forceResumeWithArgv);
